CREATE TABLE productos (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100),
    fecharegistro DATE
);

CREATE OR REPLACE PROCEDURE SP_INSERTANDLISTPRODUCTS(
	p_id IN NUMBER,
    p_nombre IN VARCHAR2,
    p_fecha IN DATE,
    p_operacion IN VARCHAR2,
    p_resultado OUT SYS_REFCURSOR,
    p_mensaje OUT VARCHAR2,
    p_codigo OUT NUMBER
) AS
    v_idproducto NUMBER;
BEGIN
    IF p_operacion = 'LISTAR' THEN
        OPEN p_resultado FOR
            SELECT id,nombre, fecharegistro
            FROM productos
            WHERE nombre IS NULL OR (nombre LIKE '%' || p_nombre || '%');
        IF p_resultado%ISOPEN THEN
            p_codigo := 0;
        ELSE
            p_codigo := 1;
        END IF;
    ELSIF p_operacion = 'INSERTAR' THEN
    	IF p_id IS NOT NULL THEN
        	INSERT INTO productos (nombre, fecharegistro)
        	VALUES (p_nombre, p_fecha)
        	RETURNING id INTO v_idproducto;

       		OPEN p_resultado FOR
	            SELECT id,nombre, fecharegistro
	            FROM productos
	            WHERE id=v_idproducto;
        	p_codigo := 0; -- Creado
        	p_mensaje:='Ejecucion con éxito';
        ELSE
        	SELECT id INTO v_idproducto FROM productos
        	WHERE id=p_id;
        	IF v_idproducto IS NOT NULL THEN
        		UPDATE productos SET nombre=p_nombre,fecharegistro=p_fecha
        		WHERE id=v_idproducto;

        		OPEN p_resultado FOR
		            SELECT id,nombre, fecharegistro
		            FROM productos
		            WHERE id=v_idproducto;

        		p_codigo := 0; -- Actulizado
        		p_mensaje:='Ejecucion con éxito';
        	ELSE
        		p_codigo := 1;
        		p_mensaje:='Producto no existe';
        	END IF;

        END IF;

    ELSE
        p_codigo := 1; -- Solicitud incorrecta
    END IF;
EXCEPTION
    WHEN OTHERS THEN
    	p_mensaje:= SQLCODE;
        p_codigo := 1;
END;